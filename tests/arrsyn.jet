var marr Real[]|kg.m2/s2 = [7, 8, 9, 10]
var mset Real[]|kg.m2/s2 = {7, 8, 9, 10}
var mdict Real[String]|kg.m2/s2 = {"s" = 7, "e" = 8, "n" = 9, "t" = 10}

var marr[] Real = {7, 8, 9, 10}

var marr[] ~kg.m2/s2 = {7, 8, 9, 10}

var marr[] @kg.m2/s2 = {7, 8, 9, 10}

var marr[] Real = {7, 8, 9, 10}


var marr Real = {7, 8, 9, 10}

var marr !kg.m2/s2 = {7, 8, 9, 10}

var marr @|kg.m2/s2 = {7, 8, 9, 10}

var marr @Real = {7, 8, 9, 10}

var cp @Complex = conjugate(c)

var cp Complex = conjugate(c)


var mset[] Real = [7, 8, 9, 10]
var mset[2D] as Real = [7, 8, 9, 10; 4, 3, 2, 1]
var mdict[String] as Real = {"s" = 7, "e" = 8, "n" = 9, "t" = 10}
~ sets behave like dicts with a yesno value, but is really just a set. a[x] is yes if the key is found. this allows you to use it in exprs: a[x] is just haskey(a,s).

var marr = [7, 8, 9, 10]
var mset = {7, 8, 9, 10}
var mdict = {"s" = 7, "e" = 8, "n" = 9, "t" = 10}


var marr = [7, 8, 9, 10]
var mdict = {"s" = 7, "e" = 8, "n" = 9, "t" = 10}
var mset = {7, 8, 9, 10}

