enum Kinds
    unknown
    eof
    newline
    space
    binops
    unops
    plus
    minus
    times
    slash
    colon
    semicolon
    comma
    mod
    power
    pipe
    hash
    tilde
    assign
    cmpGT
    cmpLT
    cmpLT
    cmpLE
    cmpEQ
    cmpNE
    mutops
end

decl type Byte end

type Token
    var pos = 0
    var len = 0
    var line = 0
    var col = 0
    var kind = Kinds.unknown
end

type Parser
    var data Byte[] = []
    var filename = ""
    var tok = Token()
end

func slurp(file String) Byte[]

end

func detect(par Parser) Kinds
    match par.data[par.tok.pos:]
    case '+=', '-=', '*=', '/=', '^=', '%=', '.='
        ans = .mutops
    case '+','-','/','*','^','%','.',':','~','#',',',';'
        ans = .binops
    case `\d+\.?\d*([eEdD][+-]\d+)?`
    case `\w+`
    case `".*"`, `'.*'`, `\`.*\``
    end
end

func many(a Number, b Number, c Number, d Number)
end

func advance!(tok Token)
    many(2, 3, 4, 5)
end

func args(idx Number) String
end

func start()
    var par = Parser()
    var f String = args(1)
    par.data = slurp(f)
    while detect(par) != .eof
        print(par.data[par.tok.pos:par.tok.pos+par.tok.len])
        advance!(par.tok)
    end
end
