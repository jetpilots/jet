enum Kinds
    unknown
    eof
    newline
    space
    binops
    unops
    plus
    minus
    times
    slash
    colon
    semicolon
    comma
    mod
    power
    pipe
    hash
    tilde
    assign
    cmpGT
    cmpLT
    cmpLT
    cmpLE
    cmpEQ
    cmpNE
    mutops
end

type Byte
    var c = 0
end
eq(b Byte, b2 Byte) := b.c == b2.c

type Token
    var pos = 0
    var len = 0
    var line = 0
    var col = 0
    var data = ""
    var kind = Kinds.unknown
end

func slurp(file String) Byte[]

end

func detect(tok Token[]) Kinds
    match tok.data
    case '+=', '-=', '*=', '/=', '^=', '%=', '.='
        ans = .mutops
    case '+','-','/','*','^','%','.',':','~','#',',',';'
        ans = .binops
    case `\d+\.?\d*([eEdD][+-]\d+)?`
    case `\w+`
    case `".*"`, `'.*'`, `\`.*\``
    end
end

func many(a Number, b Number, c Number, d Number)
end

func advance!(tok Token)
    many(2, 3, 4, 5)
end

func args(idx Number) String
end

func start()
    var tok = Token()
    var f String = args(1)
    tok.data = slurp(f)
    while detect(tok) != .eof
        print(tok.data[tok.pos:tok.pos+tok.len])
        advance!(tok)
    end
end
