enum Kinds
    unknown
    eof
    newline
    space
    plus
    minus
    times
    slash
    colon
    semicolon
    comma
    mod
    power
    pipe
    hash
    tilde
    assign
    cmpGT
    cmpLT
    cmpLT
    cmpLE
    cmpEQ
    cmpNE
end

type Byte
    var c = 0
end
eq(b Byte, b2 Byte) := b.c == b2.c

type Token
    var pos = 0
    var len = 0
    var line = 0
    var col = 0
    var data = ""
    var kind = Kinds.unknown
end

func slurp(file String) as Byte[]

end

func detect(tok Token) as Kinds
    match tok.data
    case '+=', '-=', '*=', '/=', '^=', '%=', '.='
        ans = .binops
    case '+','-','/','*','^','%','.',':','~','#',',',';'
    case `\d+\.?\d*([eEdD][+-]\d+)?`
    case `\w+`
    case `".*"`, `'.*'`, `\`.*\``
    end
end

func advance!(tok Token)
end

func args(idx Number) as String
end

func start()
    var tok = Token()
    var f String = args(1)
    tok.data = slurp(f)
    while detect(tok) != .eof
        print(tok.data[tok.pos:tok.pos+tok.len])
        advance!(tok)
    end
end