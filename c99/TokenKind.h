
// Autogenerated file, DO NOT EDIT.

typedef enum tokenkind_e {
    tk_nullChar,
    __tk__keywords__begin,
    __tk__ctrlflow__begin,
    tk_keyword_for,
    tk_keyword_while,
    tk_keyword_if,
    tk_keyword_match,
    tk_keyword_case,
    tk_keyword_else,
    tk_keyword_elif,
    tk_keyword_do,
    tk_keyword_then,
    __tk__ctrlflow__end,
    tk_keyword_end,
    tk_keyword_enum,
    tk_keyword_function,
    tk_keyword_declare,
    tk_keyword_test,
    tk_keyword_check,
    __tk__logicals__begin,
    tk_keyword_not,
    tk_keyword_and,
    tk_keyword_or,
    tk_keyword_in,
    tk_keyword_notin,
    __tk__logicals__end,
    tk_keyword_yes,
    tk_keyword_no,
    tk_keyword_nil,
    tk_keyword_as,
    tk_keyword_type,
    tk_keyword_return,
    tk_keyword_result,
    tk_keyword_extends,
    tk_keyword_var,
    tk_keyword_let,
    tk_keyword_import,
    __tk__keywords__end,
    tk_identifier,
    tk_argumentLabel,
    tk_functionCall,
    tk_subscript,
    tk_objectInit,
    tk_number,
    tk_identifierResolved,
    tk_functionCallResolved,
    tk_subscriptResolved,
    tk_objectInitResolved,
    tk_numberAsInt,
    tk_numberAsDbl,
    tk_numberAsUInt,
    tk_multiDotNumber,
    tk_spaces,
    tk_oneSpace,
    tk_tab,
    tk_newline,
    tk_lineComment,
    tk_alphabet,
    tk_ampersand,
    tk_arrayClose,
    tk_arrayOpen,
    tk_arrayDims,
    tk_at,
    tk_braceClose,
    tk_braceOpen,
    tk_digit,
    tk_hash,
    tk_unaryDot,
    tk_exclamation,
    tk_pipe,
    tk_opAssign,
    tk_varAssign,
    __tk__cmpOps__begin,
    tk_opEQ,
    tk_opNE,
    tk_opGE,
    tk_opGT,
    tk_opLE,
    tk_opLT,
    __tk__cmpOps__end,
    tk_opResults,
    tk_opNotResults,
    tk_parenClose,
    tk_parenOpen,
    tk_period,
    tk_opComma,
    tk_opSemiColon,
    tk_opColon,
    tk_stringBoundary,
    tk_string,
    tk_rawStringBoundary,
    tk_rawString,
    tk_regexpBoundary,
    tk_regexp,
    tk_underscore,
    __tk__arithOps__begin,
    tk_opSlash,
    tk_opBackslash,
    tk_opPlus,
    tk_opMinus,
    tk_opUnaryMinus,
    tk_opTimes,
    tk_opPower,
    tk_opPowerEq,
    tk_opMod,
    __tk__arithOps__end,
    tk_tilde,
    tk_dollar,
    tk_units,
    __tk__selfMutOps__begin,
    tk_opPlusEq,
    tk_opMinusEq,
    tk_opSlashEq,
    tk_opTimesEq,
    tk_opColEq,
    tk_opModEq,
    __tk__selfMutOps__end,
    tk_opQuestion,
    tk_unknown,
} tokenkind_e;

static const char* const tokenkind_e_names[] = {
    [tk_nullChar] = "tk_nullChar",
    [tk_keyword_for] = "tk_keyword_for",
    [tk_keyword_while] = "tk_keyword_while",
    [tk_keyword_if] = "tk_keyword_if",
    [tk_keyword_match] = "tk_keyword_match",
    [tk_keyword_case] = "tk_keyword_case",
    [tk_keyword_else] = "tk_keyword_else",
    [tk_keyword_elif] = "tk_keyword_elif",
    [tk_keyword_do] = "tk_keyword_do",
    [tk_keyword_then] = "tk_keyword_then",
    [tk_keyword_end] = "tk_keyword_end",
    [tk_keyword_enum] = "tk_keyword_enum",
    [tk_keyword_function] = "tk_keyword_function",
    [tk_keyword_declare] = "tk_keyword_declare",
    [tk_keyword_test] = "tk_keyword_test",
    [tk_keyword_check] = "tk_keyword_check",
    [tk_keyword_not] = "tk_keyword_not",
    [tk_keyword_and] = "tk_keyword_and",
    [tk_keyword_or] = "tk_keyword_or",
    [tk_keyword_in] = "tk_keyword_in",
    [tk_keyword_notin] = "tk_keyword_notin",
    [tk_keyword_yes] = "tk_keyword_yes",
    [tk_keyword_no] = "tk_keyword_no",
    [tk_keyword_nil] = "tk_keyword_nil",
    [tk_keyword_as] = "tk_keyword_as",
    [tk_keyword_type] = "tk_keyword_type",
    [tk_keyword_return] = "tk_keyword_return",
    [tk_keyword_result] = "tk_keyword_result",
    [tk_keyword_extends] = "tk_keyword_extends",
    [tk_keyword_var] = "tk_keyword_var",
    [tk_keyword_let] = "tk_keyword_let",
    [tk_keyword_import] = "tk_keyword_import",
    [tk_identifier] = "tk_identifier",
    [tk_argumentLabel] = "tk_argumentLabel",
    [tk_functionCall] = "tk_functionCall",
    [tk_subscript] = "tk_subscript",
    [tk_objectInit] = "tk_objectInit",
    [tk_number] = "tk_number",
    [tk_identifierResolved] = "tk_identifierResolved",
    [tk_functionCallResolved] = "tk_functionCallResolved",
    [tk_subscriptResolved] = "tk_subscriptResolved",
    [tk_objectInitResolved] = "tk_objectInitResolved",
    [tk_numberAsInt] = "tk_numberAsInt",
    [tk_numberAsDbl] = "tk_numberAsDbl",
    [tk_numberAsUInt] = "tk_numberAsUInt",
    [tk_multiDotNumber] = "tk_multiDotNumber",
    [tk_spaces] = "tk_spaces",
    [tk_oneSpace] = "tk_oneSpace",
    [tk_tab] = "tk_tab",
    [tk_newline] = "tk_newline",
    [tk_lineComment] = "tk_lineComment",
    [tk_alphabet] = "tk_alphabet",
    [tk_ampersand] = "tk_ampersand",
    [tk_arrayClose] = "tk_arrayClose",
    [tk_arrayOpen] = "tk_arrayOpen",
    [tk_arrayDims] = "tk_arrayDims",
    [tk_at] = "tk_at",
    [tk_braceClose] = "tk_braceClose",
    [tk_braceOpen] = "tk_braceOpen",
    [tk_digit] = "tk_digit",
    [tk_hash] = "tk_hash",
    [tk_unaryDot] = "tk_unaryDot",
    [tk_exclamation] = "tk_exclamation",
    [tk_pipe] = "tk_pipe",
    [tk_opAssign] = "tk_opAssign",
    [tk_varAssign] = "tk_varAssign",
    [tk_opEQ] = "tk_opEQ",
    [tk_opNE] = "tk_opNE",
    [tk_opGE] = "tk_opGE",
    [tk_opGT] = "tk_opGT",
    [tk_opLE] = "tk_opLE",
    [tk_opLT] = "tk_opLT",
    [tk_opResults] = "tk_opResults",
    [tk_opNotResults] = "tk_opNotResults",
    [tk_parenClose] = "tk_parenClose",
    [tk_parenOpen] = "tk_parenOpen",
    [tk_period] = "tk_period",
    [tk_opComma] = "tk_opComma",
    [tk_opSemiColon] = "tk_opSemiColon",
    [tk_opColon] = "tk_opColon",
    [tk_stringBoundary] = "tk_stringBoundary",
    [tk_string] = "tk_string",
    [tk_rawStringBoundary] = "tk_rawStringBoundary",
    [tk_rawString] = "tk_rawString",
    [tk_regexpBoundary] = "tk_regexpBoundary",
    [tk_regexp] = "tk_regexp",
    [tk_underscore] = "tk_underscore",
    [tk_opSlash] = "tk_opSlash",
    [tk_opBackslash] = "tk_opBackslash",
    [tk_opPlus] = "tk_opPlus",
    [tk_opMinus] = "tk_opMinus",
    [tk_opUnaryMinus] = "tk_opUnaryMinus",
    [tk_opTimes] = "tk_opTimes",
    [tk_opPower] = "tk_opPower",
    [tk_opPowerEq] = "tk_opPowerEq",
    [tk_opMod] = "tk_opMod",
    [tk_tilde] = "tk_tilde",
    [tk_dollar] = "tk_dollar",
    [tk_units] = "tk_units",
    [tk_opPlusEq] = "tk_opPlusEq",
    [tk_opMinusEq] = "tk_opMinusEq",
    [tk_opSlashEq] = "tk_opSlashEq",
    [tk_opTimesEq] = "tk_opTimesEq",
    [tk_opColEq] = "tk_opColEq",
    [tk_opModEq] = "tk_opModEq",
    [tk_opQuestion] = "tk_opQuestion",
    [tk_unknown] = "tk_unknown",
};

static const char* const tokenkind_e_repr[] = {
    [tk_nullChar] = "EOF",
    [tk_keyword_for] = "for",
    [tk_keyword_while] = "while",
    [tk_keyword_if] = "if",
    [tk_keyword_match] = "match",
    [tk_keyword_case] = "case",
    [tk_keyword_else] = "else",
    [tk_keyword_elif] = "else if",
    [tk_keyword_do] = " do ",
    [tk_keyword_then] = " then ",
    [tk_keyword_end] = "end",
    [tk_keyword_enum] = "enum",
    [tk_keyword_function] = "function",
    [tk_keyword_declare] = "declare",
    [tk_keyword_test] = "test",
    [tk_keyword_check] = "check",
    [tk_keyword_not] = "not ",
    [tk_keyword_and] = " and ",
    [tk_keyword_or] = " or ",
    [tk_keyword_in] = " in ",
    [tk_keyword_notin] = " not in ",
    [tk_keyword_yes] = "yes",
    [tk_keyword_no] = "no",
    [tk_keyword_nil] = "nil",
    [tk_keyword_as] = " as ",
    [tk_keyword_type] = "type ",
    [tk_keyword_return] = "return ",
    [tk_keyword_result] = " result ",
    [tk_keyword_extends] = " extends ",
    [tk_keyword_var] = "var ",
    [tk_keyword_let] = "let ",
    [tk_keyword_import] = "import ",
    [tk_identifier] = "(id)",
    [tk_argumentLabel] = "(lbl)",
    [tk_functionCall] = "(call)",
    [tk_subscript] = "(sub)",
    [tk_objectInit] = "(obj)",
    [tk_number] = "'123'",
    [tk_identifierResolved] = "[id]",
    [tk_functionCallResolved] = "[call]",
    [tk_subscriptResolved] = "[sub]",
    [tk_objectInitResolved] = "{obj}",
    [tk_numberAsInt] = "123",
    [tk_numberAsDbl] = "1.23",
    [tk_numberAsUInt] = "+123",
    [tk_multiDotNumber] = "1.2.3",
    [tk_spaces] = "(spc)",
    [tk_oneSpace] = "(sp1)",
    [tk_tab] = "(tab)",
    [tk_newline] = "(nl)",
    [tk_lineComment] = "#",
    [tk_alphabet] = "a",
    [tk_ampersand] = "&",
    [tk_arrayClose] = "]",
    [tk_arrayOpen] = "[",
    [tk_arrayDims] = "[:]",
    [tk_at] = "@",
    [tk_braceClose] = "}",
    [tk_braceOpen] = "{",
    [tk_digit] = "1",
    [tk_hash] = "#",
    [tk_unaryDot] = ".",
    [tk_exclamation] = "!",
    [tk_pipe] = "|",
    [tk_opAssign] = "=",
    [tk_varAssign] = "v=",
    [tk_opEQ] = "==",
    [tk_opNE] = "!=",
    [tk_opGE] = ">=",
    [tk_opGT] = ">",
    [tk_opLE] = "<=",
    [tk_opLT] = "<",
    [tk_opResults] = " -> ",
    [tk_opNotResults] = " -/> ",
    [tk_parenClose] = ")",
    [tk_parenOpen] = "(",
    [tk_period] = ".",
    [tk_opComma] = ", ",
    [tk_opSemiColon] = "; ",
    [tk_opColon] = ":",
    [tk_stringBoundary] = "\"",
    [tk_string] = "\"abc\"",
    [tk_rawStringBoundary] = "'",
    [tk_rawString] = "'abc'",
    [tk_regexpBoundary] = "`",
    [tk_regexp] = "`abc`",
    [tk_underscore] = "_",
    [tk_opSlash] = "/",
    [tk_opBackslash] = "\\",
    [tk_opPlus] = "+",
    [tk_opMinus] = "-",
    [tk_opUnaryMinus] = "-",
    [tk_opTimes] = "*",
    [tk_opPower] = "^",
    [tk_opPowerEq] = " ^= ",
    [tk_opMod] = "%",
    [tk_tilde] = "~",
    [tk_dollar] = "$",
    [tk_units] = "|N.m/s",
    [tk_opPlusEq] = " += ",
    [tk_opMinusEq] = " -= ",
    [tk_opSlashEq] = " /= ",
    [tk_opTimesEq] = " *= ",
    [tk_opColEq] = " := ",
    [tk_opModEq] = " %= ",
    [tk_opQuestion] = "?",
    [tk_unknown] = "(unk)",
};

static const char* const tokenkind_e_srepr[] = {
    [tk_nullChar] = "EOF",
    [tk_keyword_for] = "for ",
    [tk_keyword_while] = "while ",
    [tk_keyword_if] = "if ",
    [tk_keyword_match] = "match ",
    [tk_keyword_case] = "case ",
    [tk_keyword_else] = "else",
    [tk_keyword_elif] = "else if ",
    [tk_keyword_do] = " do ",
    [tk_keyword_then] = " then ",
    [tk_keyword_end] = "end",
    [tk_keyword_enum] = "enum ",
    [tk_keyword_function] = "function",
    [tk_keyword_declare] = "declare",
    [tk_keyword_test] = "test ",
    [tk_keyword_check] = "check ",
    [tk_keyword_not] = "not ",
    [tk_keyword_and] = " and ",
    [tk_keyword_or] = " or ",
    [tk_keyword_in] = " in ",
    [tk_keyword_notin] = " not in ",
    [tk_keyword_yes] = "yes",
    [tk_keyword_no] = "no",
    [tk_keyword_nil] = "nil",
    [tk_keyword_as] = " as ",
    [tk_keyword_type] = "type ",
    [tk_keyword_return] = "return ",
    [tk_keyword_result] = " result ",
    [tk_keyword_extends] = " extends ",
    [tk_keyword_var] = "var ",
    [tk_keyword_let] = "let ",
    [tk_keyword_import] = "import ",
    [tk_identifier] = "(id)",
    [tk_argumentLabel] = "(lbl)",
    [tk_functionCall] = "(call)",
    [tk_subscript] = "(sub)",
    [tk_objectInit] = "(obj)",
    [tk_number] = "'123'",
    [tk_identifierResolved] = "[id]",
    [tk_functionCallResolved] = "[call]",
    [tk_subscriptResolved] = "[sub]",
    [tk_objectInitResolved] = "{obj}",
    [tk_numberAsInt] = "123",
    [tk_numberAsDbl] = "1.23",
    [tk_numberAsUInt] = "+123",
    [tk_multiDotNumber] = "1.2.3",
    [tk_spaces] = "(spc)",
    [tk_oneSpace] = "(sp1)",
    [tk_tab] = "(tab)",
    [tk_newline] = "(nl)",
    [tk_lineComment] = "#",
    [tk_alphabet] = "a",
    [tk_ampersand] = "&",
    [tk_arrayClose] = "]",
    [tk_arrayOpen] = "[",
    [tk_arrayDims] = "[:]",
    [tk_at] = "@",
    [tk_braceClose] = "}",
    [tk_braceOpen] = "{",
    [tk_digit] = "1",
    [tk_hash] = "#",
    [tk_unaryDot] = ".",
    [tk_exclamation] = "!",
    [tk_pipe] = "|",
    [tk_opAssign] = " = ",
    [tk_varAssign] = "v=",
    [tk_opEQ] = " == ",
    [tk_opNE] = " != ",
    [tk_opGE] = " >= ",
    [tk_opGT] = " > ",
    [tk_opLE] = " <= ",
    [tk_opLT] = " < ",
    [tk_opResults] = " -> ",
    [tk_opNotResults] = " -/> ",
    [tk_parenClose] = ")",
    [tk_parenOpen] = "(",
    [tk_period] = ".",
    [tk_opComma] = ", ",
    [tk_opSemiColon] = "; ",
    [tk_opColon] = ":",
    [tk_stringBoundary] = "\"",
    [tk_string] = "\"abc\"",
    [tk_rawStringBoundary] = "'",
    [tk_rawString] = "'abc'",
    [tk_regexpBoundary] = "`",
    [tk_regexp] = "`abc`",
    [tk_underscore] = "_",
    [tk_opSlash] = " / ",
    [tk_opBackslash] = " \\ ",
    [tk_opPlus] = " + ",
    [tk_opMinus] = " - ",
    [tk_opUnaryMinus] = " -",
    [tk_opTimes] = " * ",
    [tk_opPower] = "^",
    [tk_opPowerEq] = " ^= ",
    [tk_opMod] = " % ",
    [tk_tilde] = "~",
    [tk_dollar] = "$",
    [tk_units] = "|N.m/s",
    [tk_opPlusEq] = " += ",
    [tk_opMinusEq] = " -= ",
    [tk_opSlashEq] = " /= ",
    [tk_opTimesEq] = " *= ",
    [tk_opColEq] = " := ",
    [tk_opModEq] = " %= ",
    [tk_opQuestion] = "?",
    [tk_unknown] = "(unk)",
};

