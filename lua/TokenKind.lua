 local tk = {
    EOF = {id=1, name="EOF", repr="EOF"}, 
    __tk__keywords__begin = {id=2, name="__tk__keywords__begin", repr=""}, 
    __tk__ctrlflow__begin = {id=3, name="__tk__ctrlflow__begin", repr=""}, 
    For = {id=4, name="For", repr="for "}, 
    While = {id=5, name="While", repr="while "}, 
    If = {id=6, name="If", repr="if "}, 
    Match = {id=7, name="Match", repr="match "}, 
    Case = {id=8, name="Case", repr="case "}, 
    Else = {id=9, name="Else", repr="else"}, 
    Elif = {id=10, name="Elif", repr="else if "}, 
    Do = {id=11, name="Do", repr=" do "}, 
    Then = {id=12, name="Then", repr=" then "}, 
    __tk__ctrlflow__end = {id=13, name="__tk__ctrlflow__end", repr=""}, 
    End = {id=14, name="End", repr="end"}, 
    Enum = {id=15, name="Enum", repr="enum "}, 
    Func = {id=16, name="Func", repr="func"}, 
    Event = {id=17, name="Event", repr="event"}, 
    When = {id=18, name="When", repr="when"}, 
    Decl = {id=19, name="Decl", repr="decl"}, 
    Test = {id=20, name="Test", repr="test "}, 
    Check = {id=21, name="Check", repr="check "}, 
    __tk__logicals__begin = {id=22, name="__tk__logicals__begin", repr=""}, 
    Not = {id=23, name="Not", repr="not "}, 
    And = {id=24, name="And", repr=" and "}, 
    Or = {id=25, name="Or", repr=" or "}, 
    In = {id=26, name="In", repr=" in "}, 
    Notin = {id=27, name="Notin", repr=" not in "}, 
    __tk__logicals__end = {id=28, name="__tk__logicals__end", repr=""}, 
    Yes = {id=29, name="Yes", repr="yes"}, 
    No = {id=30, name="No", repr="no"}, 
    Nil = {id=31, name="Nil", repr="nil"}, 
    As = {id=32, name="As", repr=" as "}, 
    Type = {id=33, name="Type", repr="type "}, 
    Return = {id=34, name="Return", repr="return "}, 
    Private = {id=35, name="Private", repr="private"}, 
    Break = {id=36, name="Break", repr="break "}, 
    Continue = {id=37, name="Continue", repr="continue "}, 
    Throw = {id=38, name="Throw", repr="throw "}, 
    Catch = {id=39, name="Catch", repr="catch "}, 
    Yield = {id=40, name="Yield", repr="yield "}, 
    Extends = {id=41, name="Extends", repr=" extends "}, 
    Var = {id=42, name="Var", repr="var "}, 
    Let = {id=43, name="Let", repr="let "}, 
    Import = {id=44, name="Import", repr="import "}, 
    __tk__keywords__end = {id=45, name="__tk__keywords__end", repr=""}, 
    Ident = {id=46, name="Ident", repr="(id)"}, 
    FuncCall = {id=47, name="FuncCall", repr="(call)"}, 
    Subscript = {id=48, name="Subscript", repr="(sub)"}, 
    ObjInit = {id=49, name="ObjInit", repr="(obj)"}, 
    Number = {id=50, name="Number", repr="'123'"}, 
    IdentR = {id=51, name="IdentR", repr="[id]"}, 
    FuncCallR = {id=52, name="FuncCallR", repr="[call]"}, 
    SubscriptR = {id=53, name="SubscriptR", repr="[sub]"}, 
    ObjInitR = {id=54, name="ObjInitR", repr="{obj}"}, 
    Spaces = {id=55, name="Spaces", repr="(spc)"}, 
    OneSpace = {id=56, name="OneSpace", repr="(sp1)"}, 
    Tab = {id=57, name="Tab", repr="(tab)"}, 
    EOL = {id=58, name="EOL", repr="(nl)"}, 
    Comment = {id=59, name="Comment", repr="~"}, 
    Alphabet = {id=60, name="Alphabet", repr="a"}, 
    Ampersand = {id=61, name="Ampersand", repr="&"}, 
    ArrayClose = {id=62, name="ArrayClose", repr="]"}, 
    ArrayOpen = {id=63, name="ArrayOpen", repr="["}, 
    ArrayDims = {id=64, name="ArrayDims", repr="[:]"}, 
    At = {id=65, name="At", repr="@"}, 
    BraceClose = {id=66, name="BraceClose", repr="}"}, 
    BraceOpen = {id=67, name="BraceOpen", repr="{"}, 
    Digit = {id=68, name="Digit", repr="1"}, 
    Hash = {id=69, name="Hash", repr="#"}, 
    UnaryDot = {id=70, name="UnaryDot", repr="."}, 
    EnumMember = {id=71, name="EnumMember", repr="#a"}, 
    Excl = {id=72, name="Excl", repr="!"}, 
    Pipe = {id=73, name="Pipe", repr="|"}, 
    VarDefn = {id=74, name="VarDefn", repr="v="}, 
    ArgAssign = {id=75, name="ArgAssign", repr="a="}, 
    __tk__cmpOps__begin = {id=76, name="__tk__cmpOps__begin", repr=""}, 
    EQ = {id=77, name="EQ", repr=" == "}, 
    NE = {id=78, name="NE", repr=" != "}, 
    GE = {id=79, name="GE", repr=" >= "}, 
    GT = {id=80, name="GT", repr=" > "}, 
    LE = {id=81, name="LE", repr=" <= "}, 
    LT = {id=82, name="LT", repr=" < "}, 
    __tk__cmpOps__end = {id=83, name="__tk__cmpOps__end", repr=""}, 
    ParenClose = {id=84, name="ParenClose", repr=")"}, 
    ParenOpen = {id=85, name="ParenOpen", repr="("}, 
    Period = {id=86, name="Period", repr="."}, 
    Comma = {id=87, name="Comma", repr=", "}, 
    SemiColon = {id=88, name="SemiColon", repr="; "}, 
    Colon = {id=89, name="Colon", repr=":"}, 
    StringBoundary = {id=90, name="StringBoundary", repr="\""}, 
    String = {id=91, name="String", repr="\"abc\""}, 
    RawStringBoundary = {id=92, name="RawStringBoundary", repr="'"}, 
    RawString = {id=93, name="RawString", repr="'abc'"}, 
    RegexpBoundary = {id=94, name="RegexpBoundary", repr="`"}, 
    Regexp = {id=95, name="Regexp", repr="`abc`"}, 
    Underscore = {id=96, name="Underscore", repr="_"}, 
    __tk__arithOps__begin = {id=97, name="__tk__arithOps__begin", repr=""}, 
    Slash = {id=98, name="Slash", repr=" / "}, 
    Backslash = {id=99, name="Backslash", repr=" \\ "}, 
    Plus = {id=100, name="Plus", repr=" + "}, 
    Minus = {id=101, name="Minus", repr=" - "}, 
    UnaryMinus = {id=102, name="UnaryMinus", repr=" -"}, 
    Times = {id=103, name="Times", repr=" * "}, 
    Power = {id=104, name="Power", repr="^"}, 
    PowerEq = {id=105, name="PowerEq", repr=" ^= "}, 
    Mod = {id=106, name="Mod", repr=" % "}, 
    __tk__arithOps__end = {id=107, name="__tk__arithOps__end", repr=""}, 
    Tilde = {id=108, name="Tilde", repr="~"}, 
    Dollar = {id=109, name="Dollar", repr="$"}, 
    Units = {id=110, name="Units", repr="|N.m/s"}, 
    __tk__selfMutOps__begin = {id=111, name="__tk__selfMutOps__begin", repr=""}, 
    Assign = {id=112, name="Assign", repr=" = "}, 
    PlusEq = {id=113, name="PlusEq", repr=" += "}, 
    MinusEq = {id=114, name="MinusEq", repr=" -= "}, 
    SlashEq = {id=115, name="SlashEq", repr=" /= "}, 
    TimesEq = {id=116, name="TimesEq", repr=" *= "}, 
    ColEq = {id=117, name="ColEq", repr=" := "}, 
    ModEq = {id=118, name="ModEq", repr=" %= "}, 
    __tk__selfMutOps__end = {id=119, name="__tk__selfMutOps__end", repr=""}, 
    Question = {id=120, name="Question", repr="?"}, 
    Unknown = {id=121, name="Unknown", repr="(unk)"}, 
}
return tk
