#!/bin/sh

start() {
    echo "\n// Autogenerated file, DO NOT EDIT.\n" > tklist.h
    echo "typedef enum TokenKind {" >> tklist.h
    echo "static const char* const tkrepr[] = {" > tkrepr.h
    echo "static const char* const tksrepr[] = {" > tksrepr.h
    echo "static const char* const TokenKind_str[] = {" > tkstr.h
}

finish() {
    echo "};\n" >> tkrepr.h
    echo "};\n" >> tksrepr.h
    echo "};\n" >> tkstr.h
    echo "} TokenKind;\n" >> tklist.h
    cat tklist.h tkstr.h tkrepr.h tksrepr.h > TokenKindDefs.h
    rm tklist.h tkstr.h tkrepr.h tksrepr.h
}

add() {
    srepr=${2}
    repr=${3:-$2}
    echo "    $1," >> tklist.h
    echo "    [$1] = \"$1\"," >> tkstr.h
    echo "    [$1] = \"$srepr\"," >> tksrepr.h
    echo "    [$1] = \"$repr\"," >> tkrepr.h
}

start
add tkNullChar "EOF"
add tkKeyword_cheater "cheater"
add tkKeyword_for "for "  "for"
add tkKeyword_while "while "  "while"
add tkKeyword_if "if " "if"
add tkKeyword_end "end"
add tkKeyword_enum "enum " "enum"
add tkKeyword_match "match " "match"
add tkKeyword_case "case " "case"
add tkKeyword_function "function"
add tkKeyword_declare "declare"
add tkKeyword_test "test "  "test"
add tkKeyword_check "check "  "check"
add tkKeyword_not "not "
add tkKeyword_notin "not in "
add tkKeyword_and " and "
add tkKeyword_yes "yes"
add tkKeyword_no "no"
add tkKeyword_nil "nil"
add tkKeyword_or " or "
add tkKeyword_in " in "
add tkKeyword_do " do "
add tkKeyword_then " then "
add tkKeyword_as " as "
add tkKeyword_else "else"
add tkKeyword_elif "else if " "else if"
add tkKeyword_type "type "
add tkKeyword_return "return "
add tkKeyword_result " result "
add tkKeyword_extends " extends "
add tkKeyword_var "var "
add tkKeyword_let "let "
add tkKeyword_import "import "
add tkIdentifier "(id)"
add tkArgumentLabel "(lbl)"
add tkFunctionCall "(call)"
add tkSubscript "(sub)"
add tkObjectInit "(obj)"
add tkNumber "'123'"
add tkIdentifierResolved "[id]"
add tkFunctionCallResolved "[call]"
add tkSubscriptResolved "[sub]"
add tkObjectInitResolved "{obj}"
add tkNumberAsInt "123"
add tkNumberAsDbl "1.23"
add tkNumberAsUInt "+123"
add tkMultiDotNumber "1.2.3"
add tkSpaces "(spc)"
add tkOneSpace "(sp1)"
add tkTab "(tab)"
add tkNewline "(nl)"
add tkLineComment "#"
add tkAlphabet "a"
add tkAmpersand "&"
add tkArrayClose "]"
add tkArrayOpen "["
add tkArrayDims "[:]"
add tkAt "@"
add tkBraceClose "}"
add tkBraceOpen "{"
add tkDigit "1"
add tkHash "#"
add tkExclamation "!"
add tkPipe "|"
add tkOpAssign " = " "="
add tkVarAssign "v=" "v="
add tkOpEQ " == " "=="
add tkOpNE " != " "!="
add tkOpGE " >= " ">="
add tkOpGT " > " ">"
add tkOpLE " <= " "<="
add tkOpLT " < " "<"
add tkOpMod " % " "%"
add tkOpModEq " %= "
add tkOpResults " -> "
add tkOpNotResults " -/> "
add tkParenClose ")"
add tkParenOpen "("
add tkPeriod "."
add tkOpComma ", "
add tkOpSemiColon "; "
add tkOpColon ":"
add tkStringBoundary "\\\""
add tkString "\\\"abc\\\""
add tkRawStringBoundary "'"
add tkRawString "'abc'"
add tkRegexpBoundary "\`"
add tkRegexp "\`abc\`"
add tkUnderscore "_"
add tkSlash " / " "/"
add tkBackslash " \\\\\\ " "\\\\\\"
add tkPlus " + " "+"
add tkMinus " - " "-"
add tkUnaryMinus " -" "-"
add tkTimes " * " "*"
add tkPower "^"
add tkPowerEq " ^= "
add tkTilde "~"
add tkDollar "$"
add tkUnits "|N.m/s"
add tkUnknown "(unk)"
add tkPlusEq " += "
add tkMinusEq " -= "
add tkSlashEq " /= "
add tkTimesEq " *= "
add tkColEq " := "
add tkQuestion "?"
finish
