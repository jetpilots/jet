enum TokenKinds
    nullChar = "EOF"
    keywordCheater = "cheater"
    keywordFor = "for"
    keywordWhile = "while"
    keywordIf = "if"
    keywordEnd = "end"
    keywordEnum = "enum"
    keywordMatch = "match"
    keywordCase = "case"
    keywordFunction = "function"
    keywordDeclare = "declare"
    keywordTest = "test"
    keywordCheck = "check"
    keywordNot = "not "
    keywordNotin = "not in "
    keywordAnd = " and "
    keywordYes = "yes"
    keywordNo = "no"
    keywordNil = "nil"
    keywordOr = " or "
    keywordIn = " in "
    keywordDo = " do "
    keywordThen = " then "
    keywordAs = " as "
    keywordElse = "else"
    keywordElif = "else if"
    keywordType = "type "
    keywordReturn = "return "
    keywordResult = " result "
    keywordExtends = " extends "
    keywordVar = "var "
    keywordLet = "let "
    keywordImport = "import "
    identifier = "(id)"
    argumentLabel = "(lbl)"
    functionCall = "(call)"
    subscript = "(sub)"
    objectInit = "(obj)"
    number = "'123'"
    identifierResolved = "id"
    functionCallResolved = "call"
    subscriptResolved = "sub"
    objectInitResolved = "{obj}"
    numberAsInt = "123"
    numberAsDbl = "1.23"
    numberAsUInt = "+123"
    multiDotNumber = "1.2.3"
    spaces = "(spc)"
    oneSpace = "(sp1)"
    tab = "(tab)"
    newline = "(nl)"
    lineComment = "#"
    alphabet = "a"
    ampersand = "&"
    arrayClose = ""
    arrayOpen = "["
    arrayDims = "[:"
    at = "@"
    braceClose = "}"
    braceOpen = "{"
    digit = "1"
    hash = "#"
    exclamation = "!"
    pipe = "|"
    opAssign = "="
    varAssign = "v="
    opEQ = "=="
    opNE = "!="
    opGE = ">="
    opGT = ">"
    opLE = "<="
    opLT = "<"
    opMod = "%"
    opModEq = " %= "
    opResults = " -> "
    opNotResults = " -/> "
    parenClose = ")"
    parenOpen = "("
    period = "."
    opComma = ", "
    opSemiColon = "; "
    opColon = ":"
    stringBoundary = "\""
    string = "\"abc\""
    rawStringBoundary = "'"
    rawString = "'abc'"
    regexpBoundary = "`"
    regexp = "`abc`"
    underscore = "_"
    slash = "/"
    backslash = "\\ "
    plus = "+"
    minus = "-"
    unaryMinus = "-"
    times = "*"
    power = "^"
    powerEq = " ^= "
    tilde = "~"
    dollar = "$"
    units = "|N.m/s"
    unknown = "(unk)"
    plusEq = " += "
    minusEq = " -= "
    slashEq = " /= "
    timesEq = " *= "
    colEq = " := "
    question = "?"
end
