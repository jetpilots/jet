type Module
    var name
    var filename
    var data, lines[]
    ~ var diag Diagnostics
    ~ Module should be error-free, so no Diagnostics in here.
end

func format(module jet.Module)
func read(module jet.Module)

func resolve(&va jet.Variable, &module jet.Module)
func resolve(&expr jet.Expr, scope Scope, &module jet.Module)

func analyze(&module jet.Module)
    ~ arg labels can be elided if identical
    analyze(&module.scope, &module)
    analyze(&module.types[:], &module)
    ...
end

func analyze(expr Expr, parent Expr?, scope Scope, fn Func)

func write(module jet.Module) ~ lint to .jet
func optimize(&module jet.Module)
func emit(module jet.Module)

func save(module jet.Module) ~ binary
~ func load(filename) jet.Module ~ binary -> in compiler
